const HTTP_CODE = {  
    SUCCESS: 200,
    BAD_REQUEST: 400,
    UNAUTHORISED: 401,
    FORBIDDEN: 403,
    NOT_FOUND: 404,
    REQUEST_TIMEOUT: 408,
    INTERNAL_SERVER_ERROR: 500,
    BAD_GATEWAY: 502,
    SERVICE_UNAVAILABLE: 503,
    INSUFFICIENT_STORAGE: 507,
    FAILURE: 520,
    DUPLICATE: 422
}

let apiResponse = {
    S200:{
        statusCode:"200",
        message:"data updated successfully",
        status:"SUCCESS"
    },
    TS200:{
        statusCode:"200",
        message:"Transaction updated successfully",
        status:"SUCCESS"
    },
    TF400:{
        statusCode:"400",
        message:"Transaction failed at insertIntoSubPkg",
        status:"Failure"
    },
    TF500:{
        statusCode:"500",
        message:"Transaction failed at insertIntoConTransaction",
        status:"Failure"
    },
    TFU500:{
        statusCode:"500",
        message:"Transaction failed at updateRecharge",
        status:"Failure"
    },
}



const getResponseObject = (status = true, statusCode = HTTP_CODE.SUCCESS, payload = [], message = '') => {
    const objResponse = {
        isBase64Encoded: false,
        statusCode: 200,
        headers: {
            "Content-Type": "application/json",
            "Access-Control-Allow-Headers": "*",
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "OPTIONS,POST,GET",
            "Access-Control-Allow-Credentials": true
        },
        body: {
            status: 'SUCCESS',
            statusCode: HTTP_CODE.SUCCESS,
            message: '',
            payload: []
        }
    }

    if (Array.isArray(payload) && !payload.length && !message) {
        objResponse.body.message = 'Data not found';
    } else if ((Array.isArray(payload)) || (typeof payload === 'object' && Object.keys(payload).length)) {
        objResponse.body.payload = payload;
        objResponse.body.message = message !== '' ? message : '';
        objResponse.body.statusCode = statusCode !== '' ? statusCode : 200;
        objResponse.body.status = status ? 'SUCCESS' : 'FAILURE';
    } else if (payload === null) {
        objResponse.body.message = 'incorrect input';
        statusCode = HTTP_CODE.BAD_REQUEST;
        objResponse.body.statusCode = HTTP_CODE.BAD_REQUEST;
    }

    return {
        ...objResponse,
        statusCode: statusCode,
        body: JSON.stringify(objResponse.body)
    };
}
module.exports = {HTTP_CODE,getResponseObject,apiResponse}
